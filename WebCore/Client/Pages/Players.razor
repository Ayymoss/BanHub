@page "/Players"
@using Player = BanHub.WebCore.Shared.Models.PlayersView.Player
@inject PlayersService PlayersService

<PageTitle>Players | Ban Hub</PageTitle>

<MudPaper Elevation="2" Class="d-flex flex-row justify-space-between align-center pa-4 rounded-b-0">
    <MudText Typo="Typo.h4" Align="Align.Center" Class="mud-text-secondary">Players</MudText>
    <MudElement Class="ml-2 mt-0">
        <MudTextField T="string" ValueChanged="OnSearch" AutoFocus="false" Placeholder="Filter"
                      Variant="Variant.Outlined" Adornment="Adornment.End" Margin="Margin.Dense" AdornmentIcon="@Icons.Material.Filled.Search"
                      AdornmentColor="Color.Default"/>
    </MudElement>
</MudPaper>
<MudTable Striped="true" HeaderClass="mud-theme-info-darken" Outlined="false" Bordered="false"
          ServerData="@(new Func<TableState, Task<TableData<Player>>>(ServerReload))" Elevation="2" RowsPerPage="20" Dense="true"
          @ref="_table">
    <HeaderContent>
        <MudTh Class="py-2">
            <MudTableSortLabel SortLabel="Id" T="Player">ID</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="Name" T="Player">Name</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="Penalties" T="Player">Penalties</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel InitialDirection="SortDirection.Descending" SortLabel="Online" T="Player">Online?</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="Created" T="Player">Created</MudTableSortLabel>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Identity</MudTd>
        <MudTd DataLabel="Name">
            <MudLink Href="@($"/Players/{context.Identity}")" Typo="Typo.body2" Color="Color.Info">@context.UserName</MudLink>
        </MudTd>
        <MudTd DataLabel="Penalties">@(context.Penalties is 0 ? "None" : context.Penalties)</MudTd>
        <MudTd DataLabel="Online">
            <MudTooltip Arrow="true" Placement="Placement.Top" Text="@context.HeartBeat.ToString("yyyy-MM-dd HH:mm:ss")">
                <MudChip Variant="Variant.Text" Size="Size.Small" Color="@(context.IsOnline ? Color.Info : Color.Warning)">
                    @(context.IsOnline ? "Online" : "Offline")
                </MudChip>
            </MudTooltip>
        </MudTd>
        <MudTd DataLabel="Created">
            <MudTooltip Arrow="true" Placement="Placement.Top" Text="@context.Created.ToString("yyyy-MM-dd HH:mm:ss")">
                <MudText Typo="Typo.body2">@context.Created.Humanize()</MudText>
            </MudTooltip>
        </MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText Class="mb-8" Color="Color.Warning">No players found.</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Loading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager PageSizeOptions="new[] {20, 50, 100}"/>
    </PagerContent>
</MudTable>

@code
{
    private MudTable<Player>? _table;
    private string? _searchString;

    private async Task<TableData<Player>> ServerReload(TableState state)
    {
        var paginationQuery = new GetPlayersPaginationCommand
        {
            Page = state.Page,
            PageSize = state.PageSize,
            SortLabel = state.SortLabel,
            SortDirection = (int)state.SortDirection,
            SearchString = _searchString,
        };

        var context = await PlayersService.GetPlayersAsync(paginationQuery);
        return new TableData<Player> {TotalItems = context.Count, Items = context.Players};
    }

    private void OnSearch(string text)
    {
        _searchString = text;
        _table!.ReloadServerData();
    }
}
