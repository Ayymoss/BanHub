@page "/Communities"
@using BanHub.WebCore.Shared.Models.CommunitiesView
@using BanHub.WebCore.Shared.Commands.Community
@inject StatisticService StatisticService
@inject CommunityService CommunityService

<PageTitle>Communities | Ban Hub</PageTitle>

<MudPaper Elevation="2" Class="d-flex flex-row justify-space-between align-center pa-4 rounded-b-0">
    <MudText Typo="Typo.h4" Align="Align.Center" Class="mud-text-secondary">Communities</MudText>
    <MudElement Class="ml-2 mt-0">
        <MudTextField T="string" ValueChanged="OnSearch" AutoFocus="false" Placeholder="Filter"
                      Variant="Variant.Outlined" Adornment="Adornment.End" Margin="Margin.Dense" AdornmentIcon="@Icons.Material.Filled.Search"
                      AdornmentColor="Color.Default"/>
    </MudElement>
</MudPaper>
<MudTable Striped="true" HeaderClass="mud-theme-info-darken" Outlined="false" Bordered="false"
          ServerData="@(new Func<TableState, Task<TableData<Community>>>(ServerReload))"
          Elevation="2" RowsPerPage="20" Dense="true"
          @ref="_table">
    <HeaderContent>
        <MudTh Class="py-2">
            <MudTableSortLabel SortLabel="Id" T="Community">ID</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="Name" T="Community">Community Name</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="Website" T="Community">Community Website</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="Servers" T="Community">Servers</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel InitialDirection="SortDirection.Descending" SortLabel="HeartBeat" T="Community">Heart Beat</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="Created" T="Community">Created</MudTableSortLabel>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ID">
            @if (context.Active)
            {
                <MudElement Class="d-flex flex-row align-center">
                    <MudTooltip Arrow="true" Placement="Placement.Top" Text="Instance Active" RootClass="d-flex">
                        <MudIcon Icon="@Icons.Material.Filled.Circle" Size="Size.Small" Color="Color.Success"/>
                    </MudTooltip>
                    <MudText Typo="Typo.body2" Class="ml-2">@context.CommunityGuid</MudText>
                </MudElement>
            }
            else
            {
                <MudElement Class="d-flex flex-row align-center">
                    <MudTooltip Arrow="true" Placement="Placement.Top" Text="Instance Not Active" RootClass="d-flex">
                        <MudIcon Icon="@Icons.Material.Filled.Circle" Size="Size.Small" Color="Color.Error"/>
                    </MudTooltip>
                    <MudText Typo="Typo.body2" Class="ml-2">@context.CommunityGuid</MudText>
                </MudElement>
            }
        </MudTd>
        <MudTd DataLabel="Name">
            <MudLink Href="@($"/Communities/{context.CommunityGuid}")" Typo="Typo.body2" Color="Color.Info">@context.CommunityName</MudLink>
        </MudTd>
        <MudTd DataLabel="Website">
            <MudLink Href="@($"https://{context.CommunityWebsite}/")" Typo="Typo.body2" Color="Color.Info">@context.CommunityWebsite</MudLink>
        </MudTd>
        <MudTd DataLabel="Servers">@context.ServerCount</MudTd>
        <MudTd DataLabel="HeartBeat">@context.HeartBeat.ToString("yyyy-MM-dd HH:mm:ss")</MudTd>
        <MudTd DataLabel="Created">@context.Created.ToString("yyyy-MM-dd HH:mm:ss")</MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText Class="mb-8" Color="Color.Warning">No communities found.</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Loading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager PageSizeOptions="new[] {20, 50, 100}"/>
    </PagerContent>
</MudTable>

@code
{
    [Parameter, SupplyParameterFromQuery(Name = "search")]
    public string? SearchString { get; set; }

    private MudTable<Community>? _table;
    private IEnumerable<Community>? _pagedData;
    private string? _searchString;
    private int _totalItems;

    private async Task<TableData<Community>> ServerReload(TableState state)
    {
        var paginationQuery = new GetCommunitiesPaginationCommand
        {
            Page = state.Page,
            PageSize = state.PageSize,
            SortLabel = state.SortLabel,
            SortDirection = (int)state.SortDirection,
            SearchString = _searchString
        };

        var statistics = await StatisticService.GetStatisticAsync();
        _pagedData = await CommunityService.GetCommunitiesPaginationAsync(paginationQuery);
        _totalItems = statistics.CommunityCount;

        return new TableData<Community> {TotalItems = _totalItems, Items = _pagedData};
    }

    private void OnSearch(string text)
    {
        _searchString = text;
        _table!.ReloadServerData();
    }
}
