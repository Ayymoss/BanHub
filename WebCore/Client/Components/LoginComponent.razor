<AuthorizeView>
    <Authorized>
        <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem">
            <RadzenButton @ref="_popupButton" Click="@(args => _popup.ToggleAsync(_popupButton.Element))" Text="@context.User.Identity!.Name"
                          ButtonStyle="ButtonStyle.Info" Style="width: 100%"/>
            <RadzenButton Click="Logout" Icon="logout" ButtonStyle="ButtonStyle.Danger" Shade="Shade.Lighter" Size="ButtonSize.Small"/>
        </RadzenStack>
        <Popup @ref="_popup" Lazy="true" class="rz-border-radius-3"
               Style="display:none;position:absolute;height:auto;width:auto;padding:5px;border:var(--rz-panel-border);background-color:var(--rz-panel-background-color);">
            <RadzenCard>
                <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="0">
                    <RadzenText Text="Assigned Roles"/>
                    <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem">
                        <RadzenText class="rz-mb-0 rz-color-series-2">
                            <strong>Web</strong>
                        </RadzenText>
                        <RadzenText>&bull;</RadzenText>
                        <RadzenText>
                            @(context.User.Claims
                                .Where(c => c.Type == ClaimTypes.Role)
                                .Select(c => c.Value)
                                .ToList()[0]
                                .ToString()
                                .Split("_")[1])
                        </RadzenText>
                    </RadzenStack>
                    <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem">
                        <RadzenText class="rz-mb-0 rz-color-series-3">
                            <strong>Community</strong>
                        </RadzenText>
                        <RadzenText>&bull;</RadzenText>
                        <RadzenText>
                            @(context.User.Claims
                                .Where(c => c.Type == ClaimTypes.Role)
                                .Select(c => c.Value)
                                .ToList()[1]
                                .ToString()
                                .Split("_")[1])
                        </RadzenText>
                    </RadzenStack>
                </RadzenStack>
            </RadzenCard>
        </Popup>
    </Authorized>
    <NotAuthorized>
        <RadzenButton Click="OpenDialog" Text="Login" ButtonStyle="ButtonStyle.Info" Style="width: 100%"/>
    </NotAuthorized>
</AuthorizeView>
