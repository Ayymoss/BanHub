@inject HttpClient Http
@using BanHub.WebCore.Client.Theme
@using Data.Domains
@inherits LayoutComponentBase
@implements IAsyncDisposable

<MudThemeProvider IsDarkMode="true" Theme="_theme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<MudBreakpointProvider/>

<MudLayout Style="height:100vh">
    <MudAppBar DisableGutters="true" Elevation="1">
        <MudElement Class="px-6 flex-grow-1 d-flex align-center">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="DrawerToggle"/>
            <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
                <MudElement Class="d-flex mr-4 align-center">
                    <MudImage Height="23" Src="/images/logo.png" Alt="BH" Elevation="23" Class="pr-2 mb-1"/>
                    <MudDivider Vertical="true" DividerType="DividerType.Middle" Class="mx-1 py-4"/>
                    <MudText Typo="Typo.h5" Class="pl-2">Ban Hub</MudText>
                </MudElement>
            </MudHidden>
            <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="false">
                <MudElement Class="d-flex mr-4 align-center">
                    <MudText Typo="Typo.h4" Class="pl-2">Ban Hub</MudText>
                </MudElement>
            </MudHidden>
            <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true" Class="d-flex align-center">
                <MudChip Variant="Variant.Text" Icon="@Icons.Material.Filled.Person" Color="Color.Info">Online &bull; @_online</MudChip>
                <MudChip Variant="Variant.Text" Icon="@Icons.Material.Filled.Block" Color="Color.Error">Day Global Bans &bull; @_bans</MudChip>
            </MudHidden>
            <MudSpacer/>
            <MudIconButton Icon="@Icons.Custom.Brands.Discord" Color="Color.Inherit" Link="https://discord.gg/Arruj6DWvp" Target="_blank"/>
            <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/Ayymoss/BanHub" Target="_blank"/>
            <MudBadge Content="@_activeUserCount" Bordered="true" Color="Color.Primary" Overlap="true" Class="ml-3 mt-2">
                <MudIcon Icon="@Icons.Material.Filled.RemoveRedEye" Color="Color.Default"/>
            </MudBadge>
        </MudElement>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent Style="height: 100%;">
        <MudStack Style="height: 100%;">
            <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="my-8 pt-8">
                @Body
            </MudContainer>
            <MudSpacer/>
            <MudAlert Class="ma-2" Severity="Severity.Info" ContentAlignment="HorizontalAlignment.Center">Site in Active Development</MudAlert>
        </MudStack>
    </MudMainContent>
</MudLayout>

@code {

    [Inject]
    private ActiveUserService ActiveUserService { get; set; } = null!;

    private readonly MudTheme _theme = Theme.LandingPageTheme();

    private int _online;
    private int _bans;
    private bool _drawerOpen = true;
    private int _activeUserCount;

    void DrawerToggle() => _drawerOpen = !_drawerOpen;

    protected override async Task OnInitializedAsync()
    {
        await ActiveUserService.Initialize();
        ActiveUserService.ActiveUserCountChanged += count =>
        {
            _activeUserCount = count;
            StateHasChanged();
        };
        _activeUserCount = ActiveUserService.ActiveUsers;

        var statistic = await Http.GetFromJsonAsync<Statistic>("/api/Statistic");
        if (statistic is null) return;
        _online = statistic.OnlineCount;
        _bans = statistic.BanCount;

        await base.OnInitializedAsync();
    }

    public async ValueTask DisposeAsync() => await ActiveUserService.DecrementCountAsync();

}
